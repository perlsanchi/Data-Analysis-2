# -*- coding: utf-8 -*-
"""Data Analysis - Forbes Richest Athletes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SYGhCRcdK22hPwBbrB6WuRnYNvMNFmfK
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly as px
import warnings
warnings.filterwarnings('ignore')
# %matplotlib inline

data = pd.read_csv('/content/Forbes Richest Atheletes.csv')
data

numerical = data.select_dtypes(exclude = 'object')
categorical = data.select_dtypes(include = 'object')
print("Numerical", numerical.head(2))
print("**********************************************************************************************")
print("Categorical", categorical.head(2))

numerical.columns

data = data.drop(['S.NO'],axis = 1)

data.rename(columns = {"earnings ($ million)":'earnings'}, inplace = True)

categorical.columns

data = data.drop(['Name'], axis = 1)

data.rename(columns = {"Current Rank":"Rank","Previous Year Rank":"Rank_last_year"}, inplace = True)

data.head()

data.head(2)

data.tail(2)

data.shape[0]

data.describe()

data.info()

data.isnull().sum()

for col in data.columns:
  print("Traversing in",col)
  print(data[col].value_counts())
  print("*************************************")

!pip install impyute

data.info()



'''data['Rank_last_year'] = data['Rank_last_year'].astype(float)'''
'''Error :- could not convert string to float: '>30' '''
data["Rank_last_year"].value_counts()

data["Rank_last_year"] = data["Rank_last_year"].replace([">10",">14",">20",">30"],'30')

data["Rank_last_year"].value_counts()

data["Rank_last_year"] = data["Rank_last_year"].replace([">100"],'100')

data["Rank_last_year"] = data["Rank_last_year"].replace([">40"],'50')

data["Rank_last_year"] = data["Rank_last_year"].replace(["not ranked","?","??","none"],'0')

data["Rank_last_year"].value_counts()

data['Rank_last_year'] = data['Rank_last_year'].astype(float)

from impyute.imputation.cs import mice

from sklearn.experimental import enable_iterative_imputer
from sklearn.impute import IterativeImputer

imputer = IterativeImputer(random_state=100, max_iter=10)

# Use Numeric Features
df_train = data.loc[:, ["Rank_last_year", "Rank"]]
df_train.head()

# fit on the dataset
imputer.fit(df_train)

df_imputed = imputer.transform(df_train)
df_imputed[:10]

# Replace with imputed values
data.loc[:, ["Rank_last_year", "Rank"]] = df_imputed
data.head(10)

data.isnull().sum()

data['Rank_last_year'] = data['Rank_last_year'].apply(np.ceil) 
print(data)

data.head()

import plotly.express as px
fig = px.box(data, y="earnings")
fig.show()

data.query("earnings > 180")

data.nlargest(10,"earnings")

#Let us find out the earnings Nationality wise:
data.groupby("Nationality")["earnings"].mean()

data.groupby("Nationality")["earnings"].sum()

data.head(1)

data.groupby(["Nationality","Sport"])["earnings"].mean()

data["Sport"].value_counts().sort_values()





'''
MMA                              1
NBA                              1
ice hockey                       1
Hockey                           1
American Football / Baseball     1
cycling                          1
Auto racing                      1
Auto Racing (Nascar)             2
Ice Hockey                       2
baseball                         3
NASCAR                           3
Baseball                         3
NFL                              3
motorcycle gp                    4
F1 Motorsports                   5
tennis                           5
auto racing                      7
F1 racing                        8
Auto Racing                     10
soccer                          11
American Football               17
boxing                          17
Tennis                          18
golf                            20
Soccer                          22
Golf                            24
basketball                      27
Boxing                          29
Basketball                      54
'''
data["Sport"] = data["Sport"].replace(["Auto Racing (Nascar)","Auto racing","auto racing"],'Auto racing')

data["Sport"].value_counts()

data["Sport"] = data["Sport"].replace(["ice hockey","Ice Hockey"],'Hockey')

data["Sport"].value_counts()

data["Sport"] = data["Sport"].replace(["American Football / Baseball"],'American Football')

data["Sport"] = data["Sport"].replace(["baseball"],'Baseball')

data["Sport"] = data["Sport"].replace(["motorcycle gp","F1 Motorsports","F1 racing","Auto racing"],'Auto Racing')

data["Sport"].value_counts()

data["Sport"] = data["Sport"].replace(["tennis"],'Tennis')

data["Sport"] = data["Sport"].replace(["soccer"],'Soccer')

data["Sport"] = data["Sport"].replace(["boxing"],'Boxing')

data["Sport"] = data["Sport"].replace(["golf"],'Golf')

data["Sport"] = data["Sport"].replace(["basketball"],'Basketball')

data["Sport"].value_counts()

data.groupby(["Nationality","Sport"])["earnings"].mean()

!pip install pycountry

import pycountry 
def alpha3code(column):
    CODE=[]
    for country in column:
        try:
            code=pycountry.countries.get(name=country).alpha_3
           # .alpha_3 means 3-letter country code 
           # .alpha_2 means 2-letter country code
            CODE.append(code)
        except:
            CODE.append('None')
    return CODE
# create a column for code 
data['CODE']=alpha3code(data.Nationality)
data.head()

data["CODE"].value_counts()

!pip install geopandas

data.groupby('Nationality')['Rank'].mean().plot()

data.groupby('Nationality')['Rank'].mean().plot(kind = 'bar')

data.plot(x="Year", y=["Rank","Rank_last_year"])
plt.show()

data.to_csv('Forbes Richest Athletes ready.csv', header=True, index=True)